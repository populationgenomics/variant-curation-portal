name: Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      PROJECT_ID: curator-348003
      REGION_ID: australia-southeast1
      DB_ENGINE: django.db.backends.postgresql

    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_DEPLOY_KEY }}

      - name: "set deployment info"
        id: "deploy_info"
        run: |
          SHA=$(git rev-parse --short HEAD)

          if [[ "${{ github.ref_name }}" == "main" ]];
          then
            TYPE=prod
            echo "django_settings_module=curation_portal.settings.base" >> $GITHUB_OUTPUT
            echo "cloud_sql_id=curator-348003:australia-southeast1:curator-postgres" >> $GITHUB_OUTPUT
          else
            TYPE=${{ github.ref_name }}
            echo "django_settings_module=curation_portal.settings.$TYPE" >> $GITHUB_OUTPUT
            echo "cloud_sql_id=curator-348003:australia-southeast1:curator-postgres-$TYPE" >> $GITHUB_OUTPUT
          fi

          if grep -q "curator-$TYPE-migrate-db" "$(gcloud beta run jobs list)";
          then
            SUB_COMMAND=update
          else
            SUB_COMMAND=create
          fi

          echo "job_command=$SUB_COMMAND" >> $GITHUB_OUTPUT
          echo "type=$TYPE" >> $GITHUB_OUTPUT
          echo "db_user=curator-$TYPE" >> $GITHUB_OUTPUT
          echo "db_database=curator-$TYPE" >> $GITHUB_OUTPUT
          echo "service_account=curator-$TYPE@curator-348003.iam.gserviceaccount.com" >> $GITHUB_OUTPUT
          echo "image_tag=$REGION_ID-docker.pkg.dev/$PROJECT_ID/images/curator-$TYPE:$SHA" >> $GITHUB_OUTPUT

      - name: "gcloud docker auth"
        run: |
          gcloud auth configure-docker $REGION_ID-docker.pkg.dev

      - name: "build image"
        run: |
          docker build -t ${{ steps.deploy_info.outputs.image_tag }} . --no-cache

      - name: "push image"
        run: |
          docker push ${{ steps.deploy_info.outputs.image_tag }}

      - name: "run migrations"
        run: |
          gcloud beta run jobs ${{ steps.deploy_info.outputs.job_command }} \
            curator-${{ steps.deploy_info.outputs.type }}-migrate-db \
            --region=$REGION_ID \
            --image=${{ steps.deploy_info.outputs.image_tag }} \
            --service-account=${{ steps.deploy_info.outputs.service_account }} \
            --set-cloudsql-instances=${{ steps.deploy_info.outputs.cloud_sql_id }} \
            --set-env-vars=DJANGO_SETTINGS_MODULE=${{ steps.deploy_info.outputs.django_settings_module }},DB_ENGINE=$DB_ENGINE,DB_HOST=/cloudsql/${{ steps.deploy_info.outputs.cloud_sql_id }},DB_DATABASE=${{ steps.deploy_info.outputs.db_database }},DB_USER=${{ steps.deploy_info.outputs.db_user }} \
            --set-secrets=SECRET_KEY=django-secret-key-${{ steps.deploy_info.outputs.type }}:latest,DB_PASSWORD=postgres-password-${{ steps.deploy_info.outputs.type }}:latest \
            --command='python,manage.py,migrate' \
            --execute-now \
            --wait

      - name: "deploy"
        run: |
          gcloud run deploy \
            curator-${{ steps.deploy_info.outputs.type }} \
            --project=$PROJECT_ID \
            --region=$REGION_ID \
            --service-account=${{ steps.deploy_info.outputs.service_account }} \
            --no-allow-unauthenticated \
            --add-cloudsql-instances=${{ steps.deploy_info.outputs.cloud_sql_id }} \
            --image=${{ steps.deploy_info.outputs.image_tag }} \
            --port=8000 \
            --set-env-vars=DJANGO_SETTINGS_MODULE=${{ steps.deploy_info.outputs.django_settings_module }},DB_ENGINE=$DB_ENGINE,DB_HOST=/cloudsql/${{ steps.deploy_info.outputs.cloud_sql_id }},DB_DATABASE=${{ steps.deploy_info.outputs.db_database }},DB_USER=${{ steps.deploy_info.outputs.db_user }},ALLOWED_HOSTS=curator.populationgenomics.org.au,CURATION_PORTAL_AUTH_HEADER=HTTP_X_GOOG_AUTHENTICATED_USER_EMAIL \
            --update-secrets=SECRET_KEY=django-secret-key-${{ steps.deploy_info.outputs.type }}:latest,DB_PASSWORD=postgres-password-${{ steps.deploy_info.outputs.type }}:latest
